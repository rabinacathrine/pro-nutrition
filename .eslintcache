[{"/mnt/f/react/day2/pro-nutrition/src/index.js":"1","/mnt/f/react/day2/pro-nutrition/src/App.js":"2","/mnt/f/react/day2/pro-nutrition/src/reportWebVitals.js":"3","/mnt/f/react/day2/pro-nutrition/src/Components/Search.jsx":"4","/mnt/f/react/day2/pro-nutrition/src/Components/Foodbox.jsx":"5","/mnt/f/react/day2/pro-nutrition/src/Components/DisplayFoodBox.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":1138,"mtime":1624792590109,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1450,"mtime":1624792287328,"results":"11","hashOfConfig":"8"},{"size":1167,"mtime":1624792672502,"results":"12","hashOfConfig":"8"},{"size":2888,"mtime":1624792981466,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"73h25p",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/mnt/f/react/day2/pro-nutrition/src/index.js",[],["28","29"],"/mnt/f/react/day2/pro-nutrition/src/App.js",[],"/mnt/f/react/day2/pro-nutrition/src/reportWebVitals.js",[],"/mnt/f/react/day2/pro-nutrition/src/Components/Search.jsx",[],"/mnt/f/react/day2/pro-nutrition/src/Components/Foodbox.jsx",[],"/mnt/f/react/day2/pro-nutrition/src/Components/DisplayFoodBox.js",["30"],"import React from 'react';\r\nimport './DisplayFood.css'\r\n\r\nvar new_list=[];\r\nvar new_value=1;  //used to hold the input value that you selected in the input box\r\nclass Display extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={list:[]}\r\n    }\r\n   show=()=>{            //diplay the details of the items \r\n    const list=this.props.details.map(value=>{\r\n        return(<div className=\"section1\">\r\n            <img src={value.image} alt=\"pictures\" className=\"pic\"></img>\r\n            <div>\r\n            <div className=\"name\">{value.name}</div>\r\n            <div>{value.cal}cal</div>\r\n            </div>\r\n            <div className=\"input-button\">\r\n            <input type=\"number\" min=\"1\" id=\"ip_val\" defaultValue=\"1\" onChange={this.change}></input>\r\n            <button onClick={()=>this.click(value,new_value)}>+</button>\r\n            </div>\r\n        </div>)\r\n        })\r\n    return list;\r\n   } \r\n   change=(e)=>{          //this function set the new_value to the value that you input in the inputbox\r\n    new_value=e.target.value;\r\n    }\r\n   click=(val,val1)=>{        //this function add the item to the output box when you click the input add button\r\n       let flags=false;\r\n       new_value=1;\r\n       console.log(val1)\r\n       new_list.forEach(item=>{\r\n          if(item[0]===val.name){\r\n              flags=true;\r\n              item[1]+=val1*val.cal\r\n          }\r\n       })\r\n       if(flags===false){new_list.push([val.name,val1*val.cal])} \r\n       this.setState({list:new_list})\r\n   }\r\n   nextsection=()=>{                //this section shows what are the items that you selected\r\n       if(this.state.list===[]){\r\n           return<div>Total 0 Calories of Food</div>\r\n       }\r\n       else{\r\n       console.log(this.state.list)\r\n       const total=this.state.list.reduce((totl,value)=>{return totl+value[1]},0)\r\n       console.log(total)\r\n       return(\r\n       <div className=\"cal\"><b>Total {total} calories of Food</b>\r\n           {this.state.list.map((val,index)=>{return(\r\n               <div className=\"list\">\r\n               <div>{index+1}.{val[0]}={val[1]}</div>\r\n               <button onClick={()=>this.exiting(val)}>x</button>   \r\n               </div>\r\n           )})}\r\n        </div>\r\n       )\r\n       }\r\n       \r\n   }\r\n   exiting=(value)=>{       //when you click the exit button on each item in the outputbox that item will get removed in the output box\r\n       console.log(value[0])\r\n       new_list=this.state.list.filter((val)=>{\r\n           if(val[0]!==value[0]){\r\n                return val\r\n           }\r\n       })\r\n       this.setState({list:new_list})\r\n   }\r\n   render(){\r\n       console.log(this.state)\r\n       return(<div className=\"section2\">\r\n           <div className=\"section\">\r\n           {this.show()}\r\n           </div>\r\n           {this.nextsection()}\r\n           </div>);\r\n   }\r\n}\r\nexport default Display",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":66,"column":45,"nodeType":"37","messageId":"38","endLine":66,"endColumn":47},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]